---
- name: Get Launcher dashboard url
  shell: oc get route/launcher -o jsonpath='{.spec.host}' -n {{ launcher_namespace }}
  register: launcher_host_cmd
- set_fact:
    launcher_dashboard_url: "http://{{ launcher_host_cmd.stdout}}"

- name: Get Che dashboard url
  shell: oc get route/che -o jsonpath='{.spec.host}' -n {{ che_namespace }}
  register: che_host_cmd
- set_fact:
    che_dashboard_url: "https://{{ che_host_cmd.stdout}}"

- name: Get 3scale dashboard url
  shell: oc get route/system-provider-admin -o jsonpath='{.spec.host}' -n {{ threescale_namespace }}
  register: threescale_host_cmd
- set_fact:
    threescale_dashboard_url: "https://{{ threescale_host_cmd.stdout}}"

- name: Get apicurio dashboard url
  shell: oc get route/apicurio-studio-ui -o jsonpath='{.spec.host}' -n {{ apicurio_namespace }}
  register: apicurio_host_cmd
- set_fact:
    apicurio_dashboard_url: "https://{{ apicurio_host_cmd.stdout}}"

# Create managed-service-broker namespace
- name: Check if {{ msbroker_namespace }} namespace exists
  shell: oc get namespace {{ msbroker_namespace }}
  failed_when: false
  register: msbroker_check_namespace_exists

- name: Create managed service broker namespace
  shell: oc new-project {{ msbroker_namespace }}
  when: msbroker_check_namespace_exists.rc != 0

- name: Ensure CRDs do not exist
  shell: "oc delete -f {{ item }}"
  register: output
  failed_when: false
  with_items: "{{ required_crds }}"

- name: Create CRDs
  shell: "oc create -f {{ item }}"
  with_items: "{{ required_crds }}"

- name: Create managed service broker template in {{ msbroker_namespace }}
  shell: "oc process -n {{ msbroker_namespace }} \
  -f {{ msbroker_template_url }} \
  --param=NAMESPACE={{ msbroker_namespace }} \
  --param=ROUTE_SUFFIX={{ route_suffix }} \
  --param=LAUNCHER_DASHBOARD_URL={{ launcher_dashboard_url }} \
  --param=CHE_DASHBOARD_URL={{ che_dashboard_url }} \
  --param=THREESCALE_DASHBOARD_URL={{ threescale_dashboard_url }} \
  --param=APICURIO_DASHBOARD_URL={{ apicurio_dashboard_url }} \
  --param=IMAGE_ORG={{ msbroker_image_org }} \
  --param=IMAGE_TAG={{ msbroker_image_tag }} | oc create -n {{ msbroker_namespace }} -f -"
  failed_when: false
